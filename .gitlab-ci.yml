stages:
  - build
  - test
  - release

.php_template: &php_template
  image: registry.gitlab.com/eternaltwin/mush/mush/api:php-8.4
  cache:
    paths:
      - "Api/vendor/"
      - "Api/.php-cs-fixer.cache"
      - "Api/.psalm/"
  before_script:
    - php -v
    - echo 'memory_limit=256M' > /usr/local/etc/php/conf.d/ci-memory.ini
    - cd Api
    # Install all project dependencies
    - composer install --ignore-platform-req=ext-protobuf
    - cp .env.gitlab .env

.php_with_db_template: &php_with_db_template
  extends: .php_template
  services:
    - postgres:17-alpine
  variables:
    POSTGRES_DB: emush_test
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: "password"
  before_script:
    - php -v
    - echo 'memory_limit=256M' > /usr/local/etc/php/conf.d/ci-memory.ini
    - cd Api
    # Install all project dependencies
    - composer install --ignore-platform-req=ext-protobuf
    - cp .env.gitlab .env.test
    - cp .env.gitlab .env
    - bin/console doctrine:schema:update --complete -f
    - bin/console doctrine:fixtures:load -n --env=test
    - openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -pass pass:mush
    - openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout -passin pass:mush
    - chmod go+r config/jwt/private.pem

.node_template: &node_template
  image: node:lts-slim
  cache:
    paths:
      - node_modules/
  before_script:
    - cd App
    - yarn install

check-mr-title:
  stage: build
  image:
    name: debian:bookworm-slim
  script:
    - source ./.gitlab/scripts/conventional_mr_title.sh
  rules:
    - if: $CI_MERGE_REQUEST_ID

build-front:
  stage: build
  needs: 
    - job: check-mr-title
      optional: true
  <<: *node_template
  script:
    - yarn build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["App/**/*.vue", "App/**/*.ts", "App/**/*.scss", "App/**/*.css"]
    - if: '$CI_COMMIT_BRANCH == "develop"'

api-test:
  <<: *php_with_db_template
  stage: test
  parallel: 8
  tags:
    - saas-linux-large-amd64
  needs:
    - job: check-mr-title
    - job: build-front
      optional: true
  script:
    - SHARD_INDEX=$((CI_NODE_INDEX))
    - php vendor/bin/codecept run --shard ${SHARD_INDEX}/8
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["Api/**/*.php", "Api/**/*.xlf"]

api-lint:
  <<: *php_template
  stage: test
  tags: 
    - saas-linux-large-amd64
  needs:
    - job: check-mr-title
    - job: build-front
      optional: true
  script:
    - sh linters.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["Api/**/*.php"]

translations-lint:
  <<: *php_template
  stage: test
  needs:
    - job: check-mr-title
    - job: build-front
      optional: true
  script:
    - php bin/console lint:xliff translations
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["Api/**/*.xlf"]
    

api-test-develop:
  <<: *php_with_db_template
  stage: test
  tags:
    - saas-linux-large-amd64
  needs:
    - job: build-front
  script:
    - pecl install pcov && docker-php-ext-enable pcov
    - php -dpcov.enabled=1 -dpcov.directory=src vendor/bin/codecept run --xml --html --coverage --coverage-html --no-colors
  coverage: '/^\s+Lines:\s+(\d+\.\d+)%/'
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - Api/tests/_output
    # make the report available in Gitlab UI. see https://docs.gitlab.com/ee/ci/unit_test_reports.html
    reports:
      junit: Api/tests/_output/report.xml
  only:
    - develop

front-lint:
  <<: *node_template
  stage: test
  needs: 
    - job: check-mr-title
    - job: build-front
      optional: true
  script:
    - yarn lint --no-fix
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["App/**/*.vue", "App/**/*.ts", "App/**/*.scss", "App/**/*.css"]
    
front-test:
  <<: *node_template
  stage: test
  needs: 
    - job: check-mr-title
      optional: true
    - job: build-front
      optional: true
  script:
    - yarn test-ci
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes: ["App/**/*.vue", "App/**/*.ts", "App/**/*.scss", "App/**/*.css"]
    - if: '$CI_COMMIT_BRANCH == "develop"'
    
# Generate a CHANGELOG.md file and create a new release on GitLab while merging to master
release:
  image: node:lts
  stage: release
  before_script:
    - npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/changelog @semantic-release/release-notes-generator @semantic-release/gitlab
  variables:
    GIT_AUTHOR_NAME: AI-NERON
    GIT_AUTHOR_EMAIL: $NERON_EMAIL
    GIT_COMMITTER_NAME: AI-NERON
    GIT_COMMITTER_EMAIL: $NERON_EMAIL
    GITLAB_TOKEN: $semantic_release_token
    version: '${version}'
  artifacts:
    expire_in: 1 week
    paths:
      - CHANGELOG.md
  script:
    - semantic-release --branches master -t $version -p @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/gitlab 
  only:
    - master