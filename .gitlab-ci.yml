.php_template: &php_template
  image: registry.gitlab.com/eternaltwin/mush/mush/api:latest
  cache:
    paths:
      - "Api/vendor/"
  before_script:
    - php -v
    - cd Api
    # Install all project dependencies
    - composer install
    - cp .env.gitlab .env

.php_with_db_template: &php_with_db_template
  extends: .php_template
  services:
    - postgres:15.1-alpine
  variables:
    POSTGRES_DB: emush_test
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: "password"
  before_script:
    - php -v
    - cd Api
    # Install all project dependencies
    - composer install
    - cp .env.gitlab .env.test
    - cp .env.gitlab .env
    - bin/console doctrine:schema:update -f
    - openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -pass pass:mush
    - openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout -passin pass:mush
    - chmod go+r config/jwt/private.pem

.node_template: &node_template
  image: node:18
  cache:
    paths:
      - node_modules/
  before_script:
    - cd App
    - yarn install

# api-test:
#   <<: *php_with_db_template
#   script:
#     - php vendor/bin/codecept run
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# api-lint:
#   <<: *php_template
#   script:
#     - ./linters.sh
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# api-test-develop:
#   <<: *php_with_db_template
#   script:
#     - pecl install xdebug && docker-php-ext-enable xdebug
#     - XDEBUG_MODE=coverage php vendor/bin/codecept run --xml --html --coverage --coverage-html --no-colors
#   coverage: '/^\s+Lines:\s+(\d+\.\d+)%/'
#   artifacts:
#     when: always
#     expire_in: 1 week
#     paths:
#       - Api/tests/_output
#     # make the report available in Gitlab UI. see https://docs.gitlab.com/ee/ci/unit_test_reports.html
#     reports:
#       junit: Api/tests/_output/report.xml
#   only:
#     - develop

# front-lint:
#   <<: *node_template
#   script:
#     - yarn lint --no-fix
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# front-test:
#   <<: *node_template
#   script:
#     - yarn test
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#     - if: '$CI_COMMIT_BRANCH == "develop"'

release:
  <<: *node_template
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab
  script:
    - semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == "test-semantic-release7"