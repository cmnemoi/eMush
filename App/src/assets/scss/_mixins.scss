/* MIXIN */


/* Add a clip-path with bezel-cuts for each corners of the element.
Corners values stand clockwise starting from top left. Always specify units (even if 0).
Missing values in @include will inherit previous corner value. */
@mixin corner-bezel($topleft: 0px, $topright: -1, $bottomright: -1, $bottomleft: -1) {
  @if $topright    == -1 { $topright    : $topleft;     }
  @if $bottomright == -1 { $bottomright : $topright;    }
  @if $bottomleft  == -1 { $bottomleft  : $bottomright; }

  clip-path: polygon(
    $topleft 0,
    calc(100% - #{$topright}) 0,
    100% $topright,
    100% calc(100% - #{$bottomright}),
    calc(100% - #{$bottomright}) 100%,
    $bottomleft 100%,
    0 calc(100% - #{$bottomleft}),
    0 $topleft
  );
}


/* Style an element to make it a button, inlcuding hover effect.
Editabe values stand for font-size, font-weight, and font-variant. Keep empty for default styles.
Adding the class ".crossed" to the element will strike-through it. */
@mixin button-style ($font-size: .83em, $font-weight: 700, $font-variant: small-caps) {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  margin: 1px;
  padding: 0 4px 2px 4px;
  border-radius: 1px;

  color: white;
  font-size: $font-size;
  font-weight: $font-weight;
  font-variant: $font-variant;
  letter-spacing: .03em;
  text-decoration: none;
  text-align: center;
  text-shadow: 0 0 4px rgb(21, 39, 60), 0 0 4px rgb(21, 39, 60);

  box-shadow: 0 0 0 1px rgba(12,18,137,1);
  background: rgb(0, 60, 195);
  background: linear-gradient(0deg, 
    rgb(0,  60,  195) 2%, 
    rgb(0,  116, 223) 6%, 
    rgb(0,  116, 224) 46%, 
    rgb(0,  142, 229) 54%, 
    rgb(0,  142, 229) 94%, 
    rgb(73, 156, 229) 96%
  );

  &:hover, &:focus {
    background: rgb(0, 60, 195);
    background: linear-gradient(0deg, 
      rgb(0,  97,  213) 2%, 
      rgb(0,  160, 233) 6%, 
      rgb(0,  160, 233) 46%, 
      rgb(0,  179, 237) 54%, 
      rgb(0,  179, 237) 94%, 
      rgb(64, 181, 236) 96%
    );
  }
  & img { padding: 0 .3em; }
  &.crossed { opacity: .5; text-decoration: line-through; }
}


@mixin inventory-slot($width: 54px, $height: 54px) {
  width: $width;
  height: $height;
  min-width: $width; /*needed for flexbox*/
  min-height: $height;
  margin: 1px;
  border: 1px solid #4077b5;
  border-radius: 3px;
  background: #3a6aab;
  box-shadow: 0 0 8px 2px inset #113880;

  &:hover, &:focus {
    border: 1px solid #fff;
  }

  &:active {
    border: 1px solid #99ff99;
    box-shadow: 0 0 0 2px inset #99ff99, 0 0 8px 2px inset #113880; }
}