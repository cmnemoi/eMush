{
	"title": "eMush - Jeu multijoueur de coopération : trahisons et survie dans l'espace !",
	"alpha": {
		"homepage": "<em>eMush</em> n'est actuellement pas ouvert au public car le jeu n'est pas terminé et est infesté de <em class='red'>Mushs</em> <em>!!!</em><br><br>Si vous êtes intéressés par le projet, n'hésitez pas à nous rejoindre sur <a href='https://discord.gg/ERc3svy'>Discord</a> et sur les <a href='https://eternal-twin.net/forum'>forums d'Eternaltwin</a>. Toutes les informations sont disponibles sur <a href='https://eternal-twin.net'>Eternaltwin</a>.<br><br>Concernant eMush alpha, des vaisseaux privés sont lancés régulièrement avec des volontaires sur <a href='https://discord.gg/ERc3svy'>Discord</a>. Pour faire partie d'un vaisseau alpha, vous aurez besoin d'un compte <a href='https://eternal-twin.net/'>Eternaltwin</a> et de rejoindre la liste de volontaires sur <a href='https://discord.gg/ERc3svy'>Discord</a>.<br><br><em>Si vous n'êtes pas sélectionnés pour un vaisseau alpha , pas d'inquiétude !</em> La liste des personnes sélectionnées change pour chaque vaisseau afin de fournir une chance à tous.",
		"valide": "Valider",
		"passphrase": "Mot de passe de l'alpha",
		"description": "Ceci est une alpha réservée aux testeurs",
		"doors": "Portes",
		"inventory": "Inventaire",
		"inventoryDescription": "Cliquez ici pour ouvrir l'inventaire de la pièce.",
		"equipment": "Équipement",
		"player": "Joueurs",
		"issue": "Merci de signaler les bugs rencontrés sur",
		"issue2": "ou le"
	},
	"footer": {
		"alphaVersion": "Version Alpha",
		"crowdin": "Vous pouvez nous aider à traduire le jeu sur ",
		"developers": "Développement",
		"coreTeam": "L'équipe d'eMush :",
		"contributors": "Merci à nos contributeurs :",
		"alpha-testers": "et tous les alpha testeurs :)",
		"emush": "eMush",
		"eternaltwin": "eMush est un site web non-commercial géré par des bénévoles. Il fait partie du projet <a href=https://eternaltwin.org/>Eternaltwin</a> dont le but est de préserver les jeux de Motion Twin, c'est-à-dire les garder accessibles même en cas de fermeture du site officiel. <strong>Nous ne sommes pas liés à Motion Twin</strong>.",
		"legal": "Mentions légales",
		"report": "Signaler un comportement inapproprié"
	},
	"util": {
		"prev": "Page précédente",
		"next": "Page suivante"
	},
	"banner": {
		"ranking": "Classements",
		"user": "Mon Compte",
		"news": "News",
		"forum": "Forum"
	},
	"ranking": {
		"ship_end_cause": "Cause de la destruction",
		"daysSurvived": "Jours survécus",
		"cyclesSurvived": "Cycles survécus",
		"playerRankingSubMenu": "Joueurs",
		"shipRankingSubMenu": "Daedalus",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Palmarès",
		"languages": "Langue du Daedalus",
		"all": "Tous les vaisseaux",
		"french": "Vaisseaux français",
		"english": "Vaisseaux anglais",
		"endCause": {
			"sol_return": "Daedalus rentré sur Sol",
			"eden": "Daedalus s'est installé sur Eden",
			"daedalus_destroyed": "Daedalus détruit",
			"killed_by_neron": "Equipage assassiné par NERON",
			"super_nova": "Super Nova"
		}
	},
	"theEnd": {
		"headliner": "Tête d'affiche :",
		"mainRoles": "Dans les rôles principaux :",
		"figurantPlayers": "Avec la participation de :",
		"goldSuperNova": "Prix Super Nova d'Or",
		"silverSuperNova": "Prix Super Nova d'Excellence",
		"bronzeSuperNova": "Prix Super Nova d'Honneur",
		"discoveredSuperNova": "Prix Super Nova Révélée",
		"specialSuperNova": "Prix Nova Spécial",
		"normalSuperNova": "Prix Nova",
		"numberOfHuntersKilled": "Hunters abattus",
		"amountOfMushPlayers": "Nombre de Mushs",
		"goBack": "Retour",
		"endCause": {
			"sol_return": "Le Daedalus est rentré sur Sol !",
			"eden": "Le Daedalus s'est installé sur Eden !",
			"daedalus_destroyed": "Votre cadavre flotte parmi les débris du Daedalus pulvérisé !",
			"killed_by_neron": "En route vers le vide infini !",
			"super_nova": "Mort à cause d'un Administrateur Taquin !",
			"alien_abducted": "Vous avez été enlevé.",
			"assassinated": "Assassiné par un équipier !",
			"depression": "Vous avez mis fin à vos jours...",
			"asphyxia": "Mort sur le Daedalus par manque d'oxygène !",
			"abandoned": "Abandonné à votre pauvre sort par le Daedalus !",
			"allergy": "Câlin avec un allergène!",
			"self_extracted": "Vos tripes avaient besoin de prendre l'air !",
			"exploration": "Tué par un accident dans un monde alien !",
			"exploration_combat": "Pulvérisé par un alien mal réveillé !",
			"exploration_lost": "Vos co-équipiers avaient la flemme de venir vous chercher !",
			"electrocuted": "Électrocuté par ce vieux tas de ferraille !",
			"injury": "Blessé à mort !",
			"burnt": "Calciné par un incendie inopportun !",
			"clumsiness": "Tellement mal en point qu'un rien vous a achevé...",
			"space_battle": "Mort présent dans un appareil annihilé !",
			"space_asphyxiated": "Mort abandonné dans l'espace intersidéral !",
			"beheaded": "Décapité par un fâcheux !",
			"starvation": "Mort de faim !",
			"quarantine": "Mis en quarantaine par NERON",
			"black_bite": "Succombé à une maladie extra-terrestre !",
			"metal_plate": "Victime de cette vieille bicoque !",
			"rocketed": "Éparpillé par un missile inquisiteur !",
			"bled": "Vidé de votre sang !",
			"infection": "Succombé à une infection massive !",
			"mankarog": "Tué par un Mankarog chafouin !",
			"no_infirmerie": "Mort perdu dans l'espace infini !",
			"suicide": "Suicidé avec panache !",
			"patrol_ship_explosion": "Manœuvre ratée !"
		}
	},
	"userBanner": {
		"userShips": "Fiche"
	},
	"userShips": {
		"pageTitle": "Fiche de ",
		"character": "Personnage",
		"daysSurvived": "Jours survécus",
		"cyclesSurvived": "Cycles survécus",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Palmarès",
		"endCauses": "Cause de mort",
		"endCause": {
			"sol_return": "Daedalus rentré sur Sol",
			"eden": "Daedalus s'est installé sur Eden",
			"daedalus_destroyed": "Daedalus détruit",
			"killed_by_neron": "Assassiné par NERON",
			"super_nova": "Super Nova",
			"alien_abducted": "Enlevé par des races supérieures",
			"assassinated": "Assassiné",
			"depression": "Dépression fatale",
			"asphyxia": "Plus d'oxygène",
			"abandoned": "Abandonné",
			"allergy": "Allergie",
			"self_extracted": "Auto-Extrait",
			"exploration": "Aventurier malchanceux",
			"exploration_combat": "Aventurier pas assez combatif",
			"exploration_lost": "Aventurier perdu",
			"electrocuted": "Électrocuté",
			"injury": "Blessures",
			"burnt": "Brûlé",
			"clumsiness": "Circonstances funestes",
			"space_battle": "Combat spatial",
			"space_asphyxiated": "Dans l'espace sans pouvoir respirer",
			"beheaded": "Décapité",
			"starvation": "Famine",
			"quarantine": "Mis en quarantaine par NERON",
			"black_bite": "Morsure Noire",
			"metal_plate": "Plaque de métal",
			"rocketed": "Roquetté",
			"bled": "Saigné",
			"infection": "Septicémie",
			"mankarog": "Aventurier trop curieux",
			"no_infirmerie": "Aucune infirmerie disponible",
			"suicide": "Suicide",
			"patrol_ship_explosion": "Patrouilleur pulvérisé"
		}
	},
	"login": "Connexion",
	"logout": "Déconnexion",
	"deathpage": {
		"title": "eMush - Vous êtes mort !",
		"name": "Nom",
		"death": "Mort",
		"reason": "Cause",
		"like": "J'aime",
		"notyet": "Vous serez notifié quand le classement de fin de partie sera publié.",
		"endgame": "Valider et continuer"
	},
	"alerts": "Alertes :",
	"downloading": "Téléchargement...",
	"loading": "Chargement...",
	"room": {
		"bridge": "Pont",
		"alphaBay": "Baie Alpha",
		"bravoBay": "Baie Beta",
		"alphaBay2": "Baie Alpha 2",
		"nexus": "Nexus",
		"medlab": "Infirmerie",
		"laboratory": "Laboratoire",
		"refectory": "Réfectoire",
		"hydroponicGarden": "Jardin Hydroponique",
		"engineRoom": "Salle des moteurs",
		"frontAlphaTurret": "Tourelle Alpha Avant",
		"centreAlphaTurret": "Tourelle Alpha Centre",
		"rearAlphaTurret": "Tourelle Alpha Arrière",
		"frontBravoTurret": "Tourelle Beta Avant",
		"centreBravoTurret": "Tourelle Beta Centre",
		"rearBravoTurret": "Tourelle Beta Arrière",
		"frontCorridor": "Couloir Avant",
		"centralCorridor": "Couloir Central",
		"rearCorridor": "Couloir Arrière",
		"icarusBay": "Baie Icarus",
		"alphaDorm": "Dortoir Alpha",
		"bravoDorm": "Dortoir Beta",
		"frontStorage": "Stockage avant",
		"centerAlphaStorage": "Stockage Alpha Centre",
		"centerBravoStorage": "Stockage Beta Centre",
		"rearAlphaStorage": "Stockage Alpha Arrière",
		"rearBravoStorage": "Stockage Beta Arrière"
	},
	"admin": {
		"user": {
			"username": "Pseudonyme",
			"roles": "Rôles"
		},
		"gameConfig": {
			"name": "Nom",
			"daedalusConfig": "Configuration du Daedalus",
			"difficultyConfig": "Configuration de la difficulté",
			"characterConfigs": "Personnages",
			"statusConfigs": "Statuts",
			"equipmentConfigs": "Équipement",
			"triumphConfigs": "Sources de triomphe",
			"diseaseCauseConfigs": "Configuration des causes de maladie",
			"diseaseConfigs": "Configurations de maladie",
			"consumableDiseaseConfigs": "Configuration des maladies des consommables"
		},
		"modifierConfig": {
			"name": "Nom",
			"delta": "Delta",
			"targetVariable": "Variable cible",
			"targetEvent": "Évènement déclencheur",
			"modifierHolderClass": "Entité porteuse du modificateur",
			"mode": "Mode de calcul",
			"variableModifier": "Modificateur de variables",
			"triggerEventModifier": "Déclencheurs d'événements",
			"preventEventModifier": "Bloqueur d'événements",
			"modifierRequirement": "Conditions d'activation",
			"triggeredEvent": "Événement déclenché",
			"replaceEvent": "Remplace l'événement initial",
			"applyOnActionParameter": "Application uniquement sur cible d'action",
			"modifierRange": "Portée du modificateur",
			"revertOnRemove": "Inverser lors de la suppression",
			"tagConstraints": "Condition sur les tags de l'événement",
			"directModifier": "Modificateur direct",
			"modifierName": "Nom du modificateur",
			"eventModifier": "Tout les modificateurs d'événements",
			"priority": "Ordre d'application",
			"modifierStrategy": "Stratégie du modificateur"
		},
		"eventConfig": {
			"name": "Nom",
			"eventName": "Nom de l'événement",
			"quantity": "Quantité",
			"targetVariable": "Variable cible",
			"variableHolderClass": "Entité porteuse de la variable"
		},
		"modifierActivationRequirement": {
			"name": "Nom",
			"activationRequirementName": "Type de condition de déclenchement",
			"activationRequirement": "Condition",
			"value": "Probabilité de déclenchement"
		},
		"statusConfig": {
			"name": "Nom",
			"visibility": "Visibilité",
			"chargeVisibility": "Visibilité des charges",
			"chargeStrategy": "Mode de chargement",
			"dischargeStrategies": "Modes de décharge",
			"maxCharge": "Nombre de charges maximum",
			"startCharge": "Nombre de charges initiales"
		},
		"actionConfig": {
			"name": "Nom complet",
			"actionName": "Nom",
			"target": "Cible",
			"types": "Types",
			"scope": "Portée",
			"successRate": "Taux de succès",
			"injuryRate": "Taux de maladresse",
			"dirtyRate": "Taux de salissure",
			"actionPoint": "Coût en points d'action",
			"movementPoint": "Coût en points de mouvement",
			"moralPoint": "Coût en points de moral",
			"percentageSuccess": "Pourcentage de succès",
			"percentageCritical": "Pourcentage de succès critique",
			"percentageInjury": "Pourcentage de maladresse",
			"percentageDirtiness": "Pourcentage de salissure",
			"isSuperDirty": "Est super salissant",
			"isNotSuperDirty": "N'est pas super salissant"
		},
		"daedalus": {
			"addNewRooms": "Ajouter des pièces",
			"deleteDuplicatedAlertElements": "Supprimer les reports d'alertes",
			"destroy": "Détruire",
			"destroyAllDaedaluses": "Détruire tous les Daedalus",
			"unlock": "Débloquer le changement de cycle",
			"createDaedalus": "Créer un Daedalus",
			"name": "Nom du Daedalus :",
			"create": "Créer un Daedalus",
			"config": "Configuration du Daedalus",
			"language": "Langue du Daedalus",
			"maintenanceOn": "Mettre le jeu en maintenance",
			"maintenanceOff": "Retirer le jeu de la maintenance"
		},
		"save": "Sauvegarder",
		"show": "Montrer",
		"search": "Rechercher",
		"edit": "Modifier",
		"updatedAt": "Mis à jour le",
		"class": "Type d'entité",
		"daedalusConfig": {
			"name": "Nom",
			"initOxygen": "Oxygène de départ",
			"initFuel": "Fuel de départ",
			"initHull": "Armure de départ",
			"initShield": "Bouclier de départ",
			"dailySporeNb": "Nombre de spores quotidiens",
			"maxOxygen": "Oxygène maximal",
			"maxFuel": "Fuel maximal",
			"maxHull": "Armure maximale",
			"maxShield": "Bouclier maximal",
			"nbMush": "Nombre de Mushs de départ",
			"cyclePerGameDay": "Nombre de cycles par jour",
			"cycleLength": "Durée du cycle (en minutes)",
			"placeConfigs": "Salles"
		},
		"difficultyConfig": {
			"name": "Nom",
			"equipmentBreakRate": "Probabilité de casse spontanée des équipements",
			"doorBreakRate": "Probabilité de casse spontanée des portes",
			"equipmentFireBreakRate": "Probabilité de casse des équipements par les incendies",
			"startingFireRate": "Probabilité d'incendies spontanés",
			"propagatingFireRate": "Probabilité de propagation des incendies",
			"hullFireDamageRate": "Probabilité de dégâts à la coque par les incendies",
			"tremorRate": "Probabilité de secousses",
			"electricArcRate": "Probabilité de décharges électriques",
			"metalPlateRate": "Probabilité de plaques de métal",
			"panicCrisisRate": "Probabilité de crises de panique",
			"plantDiseaseRate": "Probabilité de maladies spontanées (plantes)",
			"cycleDiseaseRate": "Probabilité de maladies spontanées (joueurs)",
			"firePlayerDamage": "Dégâts des incendies sur les joueurs (dégâts => probabilité)",
			"fireHullDamage": "Dégâts des incendies à la coque (dégâts => probabilité)",
			"electricArcPlayerDamage": "Dégâts des décharges électriques sur les joueurs (dégâts => probabilité)",
			"tremorPlayerDamage": "Dégâts des secousses sur les joueurs (dégâts => probabilité)",
			"metalPlatePlayerDamage": "Dégâts des plaques de métal sur les joueurs (dégâts => probabilité)",
			"panicCrisisPlayerDamage": "Dégâts des crises de panique sur les joueurs (dégâts => probabilité)",
			"difficultyModes": "Modes de difficulté (nom => jour de déclenchement)",
			"hunterSpawnRate": "Taux d'apparition des hunters au changement de cycle",
			"hunterSafeCycles": "Cycles où les hunters ne peuvent apparaître",
			"startingHuntersTruceCycles": "Nombre de cycles avant l'apparition de nouveaux hunters au début de la partie"
		},
		"characterConfig": {
			"name": "Nom",
			"characterName": "Nom du personnage",
			"maxNumberPrivateChannel": "Nombre maximum de canaux privés",
			"initHealthPoint": "Points de Vie de départ",
			"initMovementPoint": "Points de Mouvement de départ",
			"initMoralPoint": "Points de Moral de départ",
			"initActionPoint": "Points d'Action de départ",
			"initSatiety": "Satiété de départ",
			"maxActionPoint": "Points d'Action maximum",
			"maxMovementPoint": "Points de Mouvement maximum",
			"maxMoralPoint": "Points de Moral maximum",
			"maxHealthPoint": "Points de Vie maximum",
			"maxItemInInventory": "Nombre maximum d'objets en inventaire",
			"initStatuses": "Statuts de départ",
			"actions": "Actions",
			"skills": "Compétences",
			"startingItems": "Objets de départ",
			"initDiseases": "Maladies de départ"
		},
		"diseaseConfig": {
			"pageTitle": "Modification de la maladie ",
			"name": "Nom complet",
			"diseaseName": "Nom de la maladie",
			"type": "Type",
			"resistance": "Résistance",
			"delayMin": "Nombre de cycles avant activation",
			"delayLength": "Nombre de cycles d'incubation",
			"diseasePointMin": "Points de maladie minimum",
			"diseasePointLength": "Points de maladie maximum",
			"override": "Maladies remplacées",
			"overrideDiseaseToAdd": "Nom de la maladie à ajouter : ",
			"modifierConfigs": "Modificateurs",
			"symptomConfigs": "Symptômes"
		},
		"symptomConfig": {
			"pageTitle": "Modification du symptôme ",
			"name": "Nom",
			"symptomName": "Nom du symptôme",
			"trigger": "Déclencheur",
			"visibility": "Visibilité",
			"symptomActivationRequirements": "Conditions de déclenchement"
		},
		"symptomActivationRequirement": {
			"pageTitle": "Modification de la condition de déclenchement ",
			"activationRequirementName": "Type de condition de déclenchement",
			"name": "Nom complet",
			"activationRequirement": "Condition",
			"value": "Probabilité de déclenchement"
		},
		"equipmentConfig": {
			"pageTitle": "Modification de l'équipement ",
			"name": "Nom",
			"equipmentName": "Nom de l'équipement",
			"isBreakable": "Cassable",
			"isNotBreakable": "Non cassable",
			"isFireBreakable": "Cassable par les incendies",
			"isNotFireBreakable": "Non cassable par les incendies",
			"isFireDestroyable": "Peut être détruit par les incendies",
			"isNotFireDestroyable": "Ne peut pas être détruit par les incendies",
			"isPersonal": "Personnel",
			"isNotPersonal": "Non personnel",
			"dismountedProducts": "Produits du démontage",
			"addDismountedProducts": "Ajouter un produit :",
			"isStackable": "Empilable",
			"isNotStackable": "Non empilable",
			"actions": "Actions",
			"initStatuses": "Statuts",
			"mechanics": "Mécaniques"
		},
		"placeConfig": {
			"pageTitle": "Modification de la salle ",
			"name": "Nom complet",
			"placeName": "Nom de la salle",
			"type": "Type de salle",
			"doors": "Portes",
			"equipments": "Équipements",
			"items": "Objets"
		},
		"randomItemPlaces": {
			"pageTitle": "Modification de la répartition aléatoire des objets dans les salles ",
			"name": "Nom",
			"items": "Objets",
			"places": "Salles"
		},
		"mechanics": {
			"pageTitle": "Modification de la mécanique ",
			"name": "Nom",
			"mechanics": "Mécaniques",
			"mechanicsType": "Type de mécanique",
			"actions": "Actions",
			"maturationTime": "Temps de maturation (nombre de cycles => probabilité qu'il soit choisi)",
			"addMaturationTime": "Supprimer un temps de maturation :",
			"maturationTimeIndexToAdd": "Temps de maturation (en cycles) à ajouter :",
			"maturationTimeValueToAdd": "Probabilité du temps de maturation :",
			"oxygen": "Oxygène donné par jour (oxygène => probabilité)",
			"baseAccuracy": "Probabilité de toucher",
			"baseDamageRange": "Dégâts (nombre de points de vie retirés => probabilité)",
			"expeditionBonus": "Bonus en expédition",
			"criticalSuccessRate": "Probabilité de réussite critique",
			"criticalFailRate": "Probabilité d'échec critique",
			"oneShotRate": "Probabilité de tuer en un coup",
			"ingredients": "Ingrédients",
			"addIngredients": "Ajouter un ingrédient :",
			"isPerishable": "Périssable",
			"isNotPerishable": "Non périssable",
			"satiety": "Satiété",
			"actionPoints": "Points d'action gagnés (points => probabilité)",
			"moralPoints": "Points de moral gagnés (points => probabilité)",
			"healthPoints": "Points de vie gagnés (points => probabilité)",
			"movementPoints": "Points de mouvement gagnés (points => probabilité)",
			"extraEffects": "Effets supplémentaires",
			"skill": "Compétence apprise",
			"content": "Contenu",
			"isTranslated": "Est traduit",
			"isNotTranslated": "N'est pas traduit",
			"canShred": "Peut être déchiré",
			"cannotShred": "Ne peut pas être déchiré",
			"modifierConfigs": "Modificateurs",
			"equipment": "Équipement assemblé",
			"blueprint": "Plans de construction",
			"dockingPlace": "Pièce d'amarrage",
			"collectScrapNumber": "Nombre de débris ramassés à chaque action Récolter (nombre => probabilité)",
			"collectScrapPatrolShipDamage": "Dégâts infligés au patrouilleur à chaque action Récolter (nombre => probabilité)",
			"collectScrapPlayerDamage": "Dégâts infligés au joueur à chaque action Récolter (nombre => probabilité)",
			"failedManoeuvreDaedalusDamage": "Dégâts infligés au Daedalus en cas d'échec de la manoeuvre (nombre => probabilité)",
			"failedManoeuvrePatrolShipDamage": "Dégâts infligés au patrouilleur en cas d'échec de la manoeuvre (nombre => probabilité)",
			"failedManoeuvrePlayerDamage": "Dégâts infligés au joueur en cas d'échec de la manoeuvre (nombre => probabilité)",
			"book": "Apprentrons",
			"document": "Documents",
			"drug": "Médicaments",
			"fruit": "Fruits",
			"gear": "Outils",
			"plant": "Plantes",
			"ration": "Nourriture",
			"weapon": "Armes",
			"patrolShip": "Patrouilleurs"
		},
		"buttons": {
			"add": "Ajouter",
			"delete": "Supprimer",
			"updateConfig": "Mettre à jour la configuration",
			"createNewConfig": "Créer une nouvelle configuration"
		},
		"childManager": {
			"idToAdd": "ID à ajouter : "
		},
		"childCollectionManager": {
			"idToAdd": "ID à ajouter : "
		},
		"mapManager": {
			"indexToDelete": "Clé à supprimer :",
			"mapIndexToAdd": "Clé à ajouter : ",
			"mapValueToAdd": "Valeur à ajouter :"
		},
		"stringArrayManager": {
			"elementToAdd": "Élément à ajouter : "
		},
		"consumableDiseaseConfig": {
			"pageTitle": "Modification de la configuration des maladies de la nourriture ",
			"curesName": "Maladies guéries par la nourritre (maladie => probabilité qu'elle soit choisie)",
			"diseasesName": "Maladies provoquées par la nourriture (maladie => probabilité qu'elle soit choisie)",
			"diseasesChances": "Probabilité de contracter une maladie (probabilité => probabilité qu'elle soit choisie)",
			"curesChances": "Probabilité de guérir d'une maladie (probabilité => probabilité qu'elle soit choisie)",
			"diseasesDelayMin": "Nombre de cycles avant effet (nombre de cycles => probabilité qu'il soit choisi)",
			"diseasesDelayLength": "Nombre de cycles d'incubation (nombre de cycles => probabilité qu'il soit choisi)",
			"effectNumber": "Nombre d'effets (nombre d'effets => probabilité qu'il soit choisi)"
		},
		"triumphConfig": {
			"pageTitle": "Modification du triomphe ",
			"name": "Nom",
			"triumph": "Points de triomphe gagnés",
			"isAllCrew": "Gagné par tout l'équipage",
			"isNotAllCrew": "Non gagné par tout l'équipage",
			"team": "Équipe"
		},
		"newsList": {
			"create": "Écrire une news",
			"newsTitle": "Titre",
			"updatedAt": "Dernière date de modification",
			"publicationDate": "Publié le"
		},
		"newsWrite": {
			"frenchTitle": "Titre français",
			"frenchContent": "Contenu français",
			"englishContent": "Contenu anglais",
			"englishTitle": "Titre anglais",
			"spanishTitle": "Titre espagnol",
			"spanishContent": "Contenu espagnol",
			"publicationDate": "Date de publication",
			"isPinned": "Mettre en avant"
		},
		"hunterConfig": {
			"name": "Nom complet",
			"hunterName": "Nom",
			"initialHealth": "Vie initiale",
			"damageRange": "Dégâts (PV retirés => probabilité)",
			"hitChance": "Probabilité de toucher",
			"dodgeChance": "Probabilité d'esquiver",
			"drawCost": "Coût à tirer",
			"maxPerWave": "Nombre maximum par vague (vide = infini)",
			"drawWeight": "Probabilité (poids) d'être tiré à chaque vague",
			"initialStatuses": "Status de départ",
			"scrapDropTable": "Table des débris laissés à la mort (débris => probabilité)",
			"spawnDifficulty": "Jour d'apparition",
			"numberOfDroppedScrap": "Nombre de débris laissés à la mort (nombre => probabilité)",
			"bonusAfterFailedShot": "Bonus pour toucher après un tir raté",
			"numberOfActionsPerCycle": "Nombre d'actions par cycle"
		},
		"playerList": {
			"closeAllPlayers": "Fermer (archiver) tous les joueurs",
			"closePlayer": "Fermer (archiver) ce joueur",
			"quarantine": "Mettre en quarantaine"
		},
		"neronAnnouncement": {
			"destroyAndUpdate": "Destruction et mise à jour",
			"destroyAndUpdateContent": "**Alerte** : Le Daedalus est condamné à une destruction imminente. En effet, les développeurs tout-puissants ont prévu une **mise à jour** majeure du jeu. *Préparez-vous pour de nouvelles façons créatives de rencontrer votre fin !*",
			"maintenance": "Maintenance",
			"maintenanceContent": "Cher équipage, préparez-vous pour une **maintenance du jeu** dans *1 cycle*. Profitez de ce temps pour contempler le vide existentiel ou réfléchir à vos choix de vie : *le plaisir continuera après la pause technique... Ou pas*.",
			"frenchAnnouncement": "Annonce française",
			"englishAnnouncement": "Annonce anglaise",
			"sendNeronAnnouncement": "Envoyer une annonce NERON",
			"sendNeronAnnouncementToAllDaedaluses": "Envoyer une annonce NERON à tous les Daedalus"
		}
	},
	"charSelection": {
		"selectLanguage": "Sélectionnez une langue :",
		"shipNotFound": "Aucun vaisseau n'a été trouvé. Un nouveau devrait être créé dans l'heure !",
		"startGame": "Démarrer la partie",
		"youChoose": "Vous avez choisi "
	},
	"game": {
		"communications": {
			"day": "Jour",
			"cycle": "Cycle",
			"showMessageChildren": "Afficher {count} réponse | Afficher {count} réponses",
			"hideMessageChildren": "Cacher {count} réponse | Cacher {count} réponses",
			"newCycle": "Nouveau cycle",
			"myMessageHere": "Mon message ici !"
		},
		"exploration": {
			"newStep": "Nouvelle étape"
		},
		"popUp": {
			"close": "Fermer"
		}
	},
	"newsPage": {
		"publishedAt": "Publié le ",
		"updatedAt": "Mis à jour le "
	},
	"homePage": {
		"joinUs": "Inscrivez-vous !",
		"play": "Jouer !",
		"synopsis": "Vous allez vous réveiller avec 15 autres joueurs dans le Daedalus. Comme vous, ils fuient le <em>Mush</em>, un champignon qui ravage la planète Terre et menace l'Humanité.",
		"followUs": "Suivez nous :",
		"latestNews": "Dernière news :",
		"seeAllNews": "Voir toutes les news"
	},
	"errors": {
		"details": {
			"class": "Classe :",
			"details": "Détails :",
			"method": "Méthode :",
			"params": "Paramètres :",
			"url": "URL :"
		},
		"status": {
			"401": "401 Non autorisé",
			"403": "403 Interdit",
			"404": "404 Ressource non trouvée",
			"409": "409 Conflit",
			"422": "422 Entité non traitable",
			"500": "500 Erreur interne du serveur",
			"502": "502 Bad Gateway",
			"503": "503 Service indisponible"
		},
		"badGateway": "Le proxy a reçu une réponse invalide. Cette erreur est très probablement due à la synchronisation du serveur : réessayez plus tard !",
		"cannotAccessExploration": "Vous ne pouvez pas accéder à cette expédition. C'est privé un vaisseau, vous n'avez pas honte ?",
		"consultCommunity": "En cas d'erreurs répétées, consultez la communauté sur <a href='https://discord.gg/Jb8Nwjck6r'>Discord</a> ou le <a href='https://eternaltwin.org/forum/sections/b5ddc792-0738-4289-9818-c2f1f029c8b1'>forum</a>.",
		"Daedalus changing cycle": "Le Daedalus est en train de changer de cycle.",
		"gameInMaintenance": "Le jeu est en maintenance, merci de revenir plus tard !",
		"neronMessage": "<strong>NERON</strong> : Toutes mes excuses. Mon concepteur m'a programmé avec amour mais je ne suis pas parfait. Une <strong>erreur s'est produite</strong> lors de l'accès à la page demandée... Si le site est indisponible, merci de revenir dans quelques minutes.",
		"Not Found": "La ressource demandée n'a pas été trouvée.",
		"player cannot reach parameter": "Vous ne pouvez pas atteindre la cible de l'action (est-elle toujours dans la pièce ?).",
		"problem": "Il y a eu un problème lors du traitement de votre requête.",
		"reportToDevs": "Merci de rapporter cette erreur aux développeurs, avec des détails sur comment elle est apparue.",
		"title": "ERREUR"
	},
	"metaSeo": {
		"description": "eMush est une reprise de Mush, le jeu de survie et d'enquête récompensé de Motion Twin (Twinoid). Plongez maintenant dans un space opera palpitant qui mêle la survie, la déduction sociale et le jeu de rôle dans une expérience multijoueur unique !",
		"og:title": "eMush - Jeu multijoueur de coopération : trahisons et survie dans l'espace !",
		"og:description": "eMush est une reprise de Mush, le jeu de survie et d'enquête récompensé de Motion Twin (Twinoid). Plongez maintenant dans un space opera palpitant qui mêle la survie, la déduction sociale et le jeu de rôle dans une expérience multijoueur unique !"
	},
	"reportPopup": {
		"message": "Vous pouvez signaler un comportement inapproprié sur le <a href='https://discord.gg/Jb8Nwjck6r'>serveur Discord d'Eternaltwin</a>.//// Lors de votre arrivée sur le serveur, demandez à ouvrir un ticket pour signaler un comportement inapproprié sur eMush.// Vous serez alors mis en contact avec nos modérateurs. N'oubliez pas de leur fournir les informations suivantes :////- Votre pseudonyme eMush (vous êtes **{username}**)// - Votre identifiant de vaisseau (vous êtes actuellement dans le vaisseau **numéro {daedalusId}**)// - Le personnage à signaler// - La raison de votre signalement",
		"ok": "J'ai compris",
		"title": "Signaler un comportement inapproprié"
	}
}