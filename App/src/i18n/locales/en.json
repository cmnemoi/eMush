{
	"title": "eMush - Humanity's last ship, lost in space... with a traitor aboard!",
	"alpha": {
		"homepage": "<em>eMush</em> is not currently open to the public as the game is not fully finished and is infested with <em class='red'>Mushs</em><em>!!!</em><br><br>If you are interested in the game, feel free to join us on <a href='https://discord.gg/ERc3svy'>Discord</a> and on the <a href='https://eternal-twin.net/forum'>Eternaltwin forums</a>. All information is available on <a href='https://eternal-twin.net'>Eternaltwin</a>.<br><br>About the eMush alpha, private ships are regularly being launched with the help of volunteers on <a href='https://discord.gg/ERc3svy'>Discord</a>. To be part of an alpha ship, you will have to register on <a href='https://eternal-twin.net'>Eternaltwin</a> and join the list of volunteers on <a href='https://discord.gg/ERc3svy'>Discord</a>.<br><br><em>If you are not shortlisted for an alpha ship, don't worry!</em> The selection list rotates for each ship to offer everyone a chance.",
		"valide": "Submit",
		"passphrase": "Alpha Pass Phrase",
		"description": "This is an alpha for testers only.",
		"doors": "Doors",
		"inventory": "Inventory",
		"inventoryDescription": "Click here to open the Room Inventory",
		"equipment": "Equipment",
		"player": "Players",
		"issue": "Please report the encountered bugs on",
		"issue2": "or the"
	},
	"footer": {
		"alphaVersion": "Alpha Version",
		"crowdin": "You can help us translating the game on ",
		"developers": "Development",
		"coreTeam": "The eMush team:",
		"contributors": "Thanks to our contributors:",
		"alpha-testers": "and all alpha testers :)",
		"emush": "eMush",
		"eternaltwin": "eMush is a non-commercial website operated by hobbyists. It belongs to the Eternaltwin project whose purpose is to archive Motion Twin's games. This means we want to ensure they remain available even if the official website closes. <strong>We are not related to Motion Twin</strong>.",
		"legal": "Legal notice"
	},
	"util": {
		"prev": "Previous page",
		"next": "Next page"
	},
	"banner": {
		"ranking": "Rankings",
		"user": "My account",
		"news": "News",
		"forum": "Forum"
	},
	"ranking": {
		"ship_end_cause": "End cause",
		"day": "Survived days",
		"cycle": "Survived cycles",
		"playerRankingSubMenu": "Players",
		"shipRankingSubMenu": "Daedalus",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Honours List",
		"endCause": {
			"sol_return": "Daedalus returned to Sol",
			"eden": "Daedalus has settled on Eden",
			"daedalus_destroyed": "Daedalus destroyed",
			"killed_by_neron": "Crew assassinated by NERON",
			"super_nova": "Super Nova"
		}
	},
	"theEnd": {
		"headliner": "Starring role :",
		"mainRoles": "Supporting roles :",
		"figurantPlayers": "Featuring :",
		"goldSuperNova": "Golden Supernova Award",
		"silverSuperNova": "Supernova of Excellence Award",
		"bronzeSuperNova": "Honorable Supernova Award",
		"discoveredSuperNova": "Discovered Supernova Award",
		"specialSuperNova": "Special Nova Award",
		"normalSuperNova": "Prize Nova",
		"numberOfHuntersKilled": "Hunters defeated",
		"amountOfMushPlayers": "Number of Mushs",
		"goBack": "Back",
		"endCause": {
			"sol_return": "The Daedalus returned to Sol!",
			"eden": "The Daedalus has settled on Eden!",
			"daedalus_destroyed": "Your corpse is floating amongst the debris of the pulverized Daedalus!",
			"killed_by_neron": "On the way to the infinite void!",
			"super_nova": "Death by impish administrator!",
			"alien_abducted": "You have been abducted.",
			"assassinated": "Assassinated by a crewmate!",
			"depression": "You put an end to it all...",
			"asphyxia": "Dead on the Daedalus through lack of oxygen!",
			"abandoned": "Abandoned by the Daedalus to take your chances alone!",
			"allergy": "Cuddle with an allergen!",
			"self_extracted": "Your guts needed some fresh air!",
			"exploration": "Killed in an accident in an alien world!",
			"exploration_combat": "Destroyed by an alien with a headache!",
			"exploration_lost": "Your crewmates can't be bothered coming to get you...",
			"electrocuted": "Electrocuted by this old piece of junk!",
			"injury": "Injured to death!",
			"burnt": "Burnt out by an untimely fire!",
			"clumsiness": "So badly in fact that you've achieved nothing at all...",
			"space_battle": "Death present in an annihilated device!",
			"space_asphyxiated": "Dead left in outer space!",
			"beheaded": "Beheaded by a coward!",
			"starvation": "Starved to death!",
			"quarantine": "Quarantined by NERON",
			"black_bite": "Succumbed to an alien disease!",
			"metal_plate": "Another victim claimed by the old Daed-shed!",
			"rocketed": "Scattered by an inquisitive missile!",
			"bled": "Drained of blood!",
			"infection": "Succumbed to a massive infection!",
			"mankarog": "Killed by a crafty Mankarog!",
			"no_infirmerie": "Death lost in infinite space!",
			"suicide": "Suicide with panache!"
		}
	},
	"userBanner": {
		"userShips": "File"
	},
	"userShips": {
		"pageTitle": "'s file",
		"character": "Character",
		"day": "Survived days",
		"cyclesSurvived": "Survived cycles",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Honours List",
		"endCauses": "End cause",
		"endCause": {
			"sol_return": "Daedalus returned to Sol",
			"eden": "Daedalus has settled on Eden",
			"daedalus_destroyed": "Daedalus destroyed",
			"killed_by_neron": "Assassinated by NERON",
			"super_nova": "Super Nova",
			"alien_abducted": "Kidnapped by a superior race",
			"assassinated": "Assassinated",
			"depression": "Fatal Depression",
			"asphyxia": "Oxygen Stocks Exhausted",
			"abandoned": "Abandoned",
			"allergy": "Allergy",
			"self_extracted": "Self-Extracted",
			"exploration": "Unfortunate adventurer",
			"exploration_combat": "Not cut out for combat",
			"exploration_lost": "Lost explorer",
			"electrocuted": "Electrocuted",
			"injury": "Injuries",
			"burnt": "Burned",
			"clumsiness": "Putting the 'fun' in funeral",
			"space_battle": "Space combat",
			"space_asphyxiated": "In space without being able to breathe...",
			"beheaded": "Beheaded",
			"starvation": "Starvation",
			"quarantine": "Quarantined by NERON",
			"black_bite": "Black Bite",
			"metal_plate": "Steel Plated",
			"rocketed": "Rocketed",
			"bled": "Bled Out",
			"infection": "Sepsis",
			"mankarog": "Overly curious adventurer",
			"no_infirmerie": "No medlab available",
			"suicide": "Suicide"
		}
	},
	"login": "Login",
	"logout": "Logout",
	"deathpage": {
		"title": "eMush - You are dead!",
		"name": "Name",
		"death": "Death",
		"reason": "Reason",
		"like": "Like",
		"notyet": "You will be notified when the end game ranking is published.",
		"endgame": "Validate and continue"
	},
	"alerts": "Alerts :",
	"downloading": "Downloading...",
	"loading": "Loading...",
	"room": {
		"bridge": "Bridge",
		"alphaBay": "Alpha Bay",
		"bravoBay": "Bravo Bay",
		"alphaBay2": "Alpha Bay 2",
		"nexus": "Nexus",
		"medlab": "Medlab",
		"laboratory": "Laboratory",
		"refectory": "Refectory",
		"hydroponicGarden": "Hydroponic Garden",
		"engineRoom": "Engine Room",
		"frontAlphaTurret": "Front Alpha Turret",
		"centreAlphaTurret": "Center Alpha Turret",
		"rearAlphaTurret": "Rear Alpha Turret",
		"frontBravoTurret": "Front Bravo Turret",
		"centreBravoTurret": "Center Bravo Turret",
		"rearBravoTurret": "Rear Bravo Turret",
		"frontCorridor": "Front Corridor",
		"centralCorridor": "Central Corridor",
		"rearCorridor": "Rear Corridor",
		"icarusBay": "Icarus Bay",
		"alphaDorm": "Alpha Dorm",
		"bravoDorm": "Bravo Dorm",
		"frontStorage": "Front Storage",
		"centerAlphaStorage": "Center Alpha Storage",
		"centerBravoStorage": "Center Bravo Storage",
		"rearAlphaStorage": "Rear Alpha Storage",
		"rearBravoStorage": "Rear Bravo Storage"
	},
	"admin": {
		"user": {
			"username": "Username",
			"roles": "Roles"
		},
		"gameConfig": {
			"name": "Name",
			"daedalusConfig": "Daedalus config",
			"difficultyConfig": "Difficulty config",
			"characterConfigs": "Characters",
			"statusConfigs": "Statuses",
			"equipmentConfigs": "Equipment",
			"triumphConfigs": "Triumph configs",
			"diseaseCauseConfigs": "Configuration des causes de maladie",
			"diseaseConfigs": "Configurations de maladie",
			"consumableDiseaseConfigs": "Consumable disease configs"
		},
		"modifierConfig": {
			"name": "Name",
			"delta": "Delta",
			"targetVariable": "Target variable",
			"targetEvent": "Trigger event",
			"modifierHolderClass": "Modifier holder entity",
			"mode": "Calculation Mode",
			"variableModifier": "Modificateur de variables",
			"triggerEventModifier": "Déclencheurs d'événements",
			"preventEventModifier": "Bloqueur d'événements",
			"modifierRequirement": "Conditions d'activation",
			"triggeredEvent": "Nom de l'événement déclenché",
			"replaceEvent": "Remplace l'événement initial",
			"applyOnActionParameter": "Application uniquement sur cible d'action",
			"modifierRange": "Portée du modificateur",
			"revertOnRemove": "Inverser lors de la suppression",
			"tagConstraints": "Condition sur les tags de l'événement",
			"directModifier": "Modificateur direct",
			"modifierName": "Nom du modificateur",
			"eventModifier": "Tout les modificateurs d'événements",
			"priority": "Ordre d'application",
			"modifierStrategy": "Stratégie du modificateur"
		},
		"eventConfig": {
			"name": "Nom",
			"eventName": "Nom de l'évènement",
			"quantity": "Quantité",
			"targetVariable": "admin.eventConfig.targetVariable",
			"variableHolderClass": "admin.eventConfig.variableHolderClass"
		},
		"modifierActivationRequirement": {
			"name": "Name",
			"activationRequirementName": "Activation requirement type",
			"activationRequirement": "Activation requirement",
			"value": "Activation probability"
		},
		"statusConfig": {
			"name": "Name",
			"visibility": "Visibility",
			"chargeVisibility": "Charges Visibility",
			"chargeStrategy": "Charge Mode",
			"dischargeStrategies": "Modes de décharge",
			"maxCharge": "Maximum charges amount",
			"startCharge": "Initial charges amount"
		},
		"actionConfig": {
			"name": "Complete name",
			"actionName": "Name",
			"target": "Target",
			"types": "Types",
			"scope": "Scope",
			"successRate": "Success rate",
			"injuryRate": "Clumsiness rate",
			"dirtyRate": "Dirty rate",
			"actionPoint": "Action point cost",
			"movementPoint": "Movement point cost",
			"moralPoint": "Morale point cost",
			"percentageSuccess": "Success rate",
			"percentageCritical": "Critical success rate",
			"percentageInjury": "Clumsiness rate",
			"percentageDirtiness": "Dirty rate",
			"isSuperDirty": "Is super dirty",
			"isNotSuperDirty": "Is not super dirty"
		},
		"daedalus": {
			"addNewRooms": "Ajouter des pièces",
			"deleteDuplicatedAlertElements": "Supprimer les reports d'alertes",
			"destroy": "Destroy",
			"destroyAllDaedaluses": "Destroy all Daedaluses",
			"unlock": "Débloquer le changement de cycle",
			"createDaedalus": "Create a Daedalus",
			"name": "Daedalus name :",
			"create": "Create a Daedalus",
			"config": "Configuration of the daedalus",
			"language": "Daedalus language",
			"maintenanceOn": "Put the game into maintenance",
			"maintenanceOff": "Remove game from maintenance"
		},
		"save": "Save",
		"show": "Show",
		"search": "Search",
		"edit": "Edit",
		"updatedAt": "Updated at",
		"class": "Type d'entité",
		"daedalusConfig": {
			"name": "Name",
			"initOxygen": "Initial Oxygen",
			"initFuel": "Initial Fuel",
			"initHull": "Initial Hull",
			"initShield": "Initial Shield",
			"dailySporeNb": "Daily amount of Spores",
			"maxOxygen": "Maximal Oxygen",
			"maxFuel": "Maximal Fuel",
			"maxHull": "Maximal Armor",
			"maxShield": "Maximal Shield",
			"nbMush": "Initial number of Mushs",
			"cyclePerGameDay": "Number of cycles per day",
			"cycleLength": "Cycle length (in minutes)",
			"placeConfigs": "Rooms"
		},
		"difficultyConfig": {
			"name": "Name",
			"equipmentBreakRate": "Equipment break rate at cycle change",
			"doorBreakRate": "Door break rate at cycle change",
			"equipmentFireBreakRate": "Equipment break rate by fires",
			"startingFireRate": "Starting fire rate at cycle change",
			"propagatingFireRate": "Fire propagating rate",
			"hullFireDamageRate": "Fire damage rate to hull",
			"tremorRate": "Tremor rate",
			"electricArcRate": "Electric arc rate",
			"metalPlateRate": "Metal plate rate",
			"panicCrisisRate": "Panic attack rate",
			"plantDiseaseRate": "Disease rate at cycle change (plants)",
			"cycleDiseaseRate": "Disease rate at cycle change (players)",
			"firePlayerDamage": "Fire damage on players (damage => probability)",
			"fireHullDamage": "Fire damage on hull (damage => probability)",
			"electricArcPlayerDamage": "Electric arc damage on players (damage => probability)",
			"tremorPlayerDamage": "Tremor damage on players (damage => probability)",
			"metalPlatePlayerDamage": "Metal plate damage on players (damage => probability)",
			"panicCrisisPlayerDamage": "Panic attack damage on players (damage => probability)",
			"difficultyModes": "Modes de difficulté (nom => jour de déclenchement)",
			"hunterSpawnRate": "Taux d'apparition des hunters au changement de cycle",
			"hunterSafeCycles": "Cycles où les hunters ne peuvent apparaître",
			"startingHuntersTruceCycles": "Nombre de cycles avant l'apparition de nouveaux hunters au début de la partie"
		},
		"characterConfig": {
			"name": "Name",
			"characterName": "Character name",
			"maxNumberPrivateChannel": "Maximum amount of private channels",
			"initHealthPoint": "Initial Health Points",
			"initMovementPoint": "Initial Movement Points",
			"initMoralPoint": "Initial Moral Points amount",
			"initActionPoint": "Initial Action Points amount",
			"initSatiety": "Initial satiety",
			"maxActionPoint": "Maximum Action Points amount",
			"maxMovementPoint": "Maximum Movement Points amount",
			"maxMoralPoint": "Maximum Moral Points amount",
			"maxHealthPoint": "Maximum Health Points amount",
			"maxItemInInventory": "Maximum amount of items in inventory",
			"initStatuses": "Initial statuses",
			"actions": "Actions",
			"skills": "Skills",
			"startingItems": "Starting items",
			"initDiseases": "Initial diseases"
		},
		"diseaseConfig": {
			"pageTitle": "Modification of the disease ",
			"name": "Complete name",
			"diseaseName": "Name",
			"type": "Type",
			"resistance": "Resistance",
			"delayMin": "Number of cycles before activation",
			"delayLength": "Number of cycles of incubation after activation",
			"diseasePointMin": "Minimum disease points amount",
			"diseasePointLength": "Maximum disease points amount",
			"override": "Overriden disease",
			"overrideDiseaseToAdd": "Disease to add :",
			"modifierConfigs": "Modifiers",
			"symptomConfigs": "Symptoms"
		},
		"symptomConfig": {
			"pageTitle": "Modification of the symptom ",
			"name": "Complete name",
			"symptomName": "Name",
			"trigger": "Trigger",
			"visibility": "Visibility",
			"symptomActivationRequirements": "Activation requirements"
		},
		"symptomActivationRequirement": {
			"pageTitle": "Modification of the activation requirement ",
			"activationRequirementName": "Activation requirement type",
			"name": "Name",
			"activationRequirement": "Activation requirement",
			"value": "Activation probability"
		},
		"equipmentConfig": {
			"pageTitle": "Modification of the piece of equipment ",
			"name": "Complete name",
			"equipmentName": "Name",
			"isBreakable": "Is breakable",
			"isNotBreakable": "Is not breakable",
			"isFireBreakable": "Fire breakable",
			"isNotFireBreakable": "Not fire breakable",
			"isFireDestroyable": "Fire destroyable",
			"isNotFireDestroyable": "Not fire destroyable",
			"isPersonal": "Is personal",
			"isNotPersonal": "Is not personal",
			"dismountedProducts": "Items given when dismounted",
			"addDismountedProducts": "Add an item :",
			"isStackable": "Stackable",
			"isNotStackable": "Not stackable",
			"actions": "Actions",
			"initStatuses": "Statuses",
			"mechanics": "Mechanics"
		},
		"placeConfig": {
			"pageTitle": "Modification of the room ",
			"name": "Complete name",
			"placeName": "Name",
			"type": "Room type",
			"doors": "Doors",
			"equipments": "Equipment",
			"items": "Items"
		},
		"randomItemPlaces": {
			"pageTitle": "Modification of the random repartition of items in the rooms ",
			"name": "Name",
			"items": "Items",
			"places": "Rooms"
		},
		"mechanics": {
			"pageTitle": "Modification of the mechanics ",
			"name": "Name",
			"mechanics": "Mechanics",
			"mechanicsType": "Mechanics type",
			"actions": "Actions",
			"maturationTime": "Maturation time (number of cycles => probability)",
			"addMaturationTime": "Delete a maturation time :",
			"maturationTimeIndexToAdd": "Maturation time to add :",
			"maturationTimeValueToAdd": "Probability of the maturation time :",
			"oxygen": "Oxygen given per day (number of oxygen => probability)",
			"baseAccuracy": "Success rate",
			"baseDamageRange": "Damage (number of health points => probability)",
			"expeditionBonus": "Expedition bonus",
			"criticalSuccessRate": "Critical success rate",
			"criticalFailRate": "Critical fail rate",
			"oneShotRate": "One shot rate",
			"ingredients": "Ingredients",
			"addIngredients": "Add an ingredient :",
			"isPerishable": "Is perishable",
			"isNotPerishable": "Is not perishable",
			"satiety": "Satiety",
			"actionPoints": "Action points earned (points => probabilité)",
			"moralPoints": "Morale points earned (points => probabilité)",
			"healthPoints": "Health points earned (points => probabilité)",
			"movementPoints": "Movement point gagnés (points => probabilité)",
			"extraEffects": "Extra effects",
			"skill": "Learned skill",
			"content": "Content",
			"isTranslated": "Is translated",
			"isNotTranslated": "Is not translated",
			"canShred": "Can be shred",
			"cannotShred": "Cannot be shred",
			"modifierConfigs": "Modifiers",
			"equipment": "Built piece of equipment",
			"blueprint": "Blueprints",
			"dockingPlace": "Pièce d'amarrage",
			"collectScrapNumber": "Nombre de débris ramassés à chaque action Récolter (nombre => probabilité)",
			"collectScrapPatrolShipDamage": "Damage inflicted on the patroller with each Harvest action (number => probability)",
			"collectScrapPlayerDamage": "Dégâts infligés au joueur à chaque action Récolter (nombre => probabilité)",
			"failedManoeuvreDaedalusDamage": "Dégâts infligés au Daedalus en cas d'échec de la manoeuvre (nombre => probabilité)",
			"failedManoeuvrePatrolShipDamage": "Dégâts infligés au patrouilleur en cas d'échec de la manoeuvre (nombre => probabilité)",
			"failedManoeuvrePlayerDamage": "Dégâts infligés au joueur en cas d'échec de la manoeuvre (nombre => probabilité)",
			"book": "Apprentrons",
			"document": "Documents",
			"drug": "Médicaments",
			"fruit": "Fruits",
			"gear": "Gear",
			"plant": "Plants",
			"ration": "Food",
			"weapon": "Weapons",
			"patrolShip": "Patrouilleurs"
		},
		"buttons": {
			"add": "Add",
			"delete": "Delete",
			"updateConfig": "Update the configuration",
			"createNewConfig": "Create a new configuration"
		},
		"childManager": {
			"idToAdd": "ID to add : "
		},
		"childCollectionManager": {
			"idToAdd": "ID to add : "
		},
		"mapManager": {
			"indexToDelete": "Key to delete :",
			"mapIndexToAdd": "Key to add : ",
			"mapValueToAdd": "Value to add:"
		},
		"stringArrayManager": {
			"elementToAdd": "Element to add : "
		},
		"consumableDiseaseConfig": {
			"pageTitle": "Modification of the diseases given/healed by the consumable ",
			"curesName": "Diseases cured (disease => probability of being chosen)",
			"diseasesName": "Diseases given (disease => probability of being chosen)",
			"diseasesChances": "Probability of giving a disease (probability => probability of being chosen)",
			"curesChances": "Probability of curing a disease (probability => probability of being chosen)",
			"diseasesDelayMin": "Minimum number of cycles of incubation (number of cycles => probability of being chosen)",
			"diseasesDelayLength": "Maximum number of cycles of incubation (number of cycles => probability of being chosen)",
			"effectNumber": "Number of effects (number of effects => probability of being chosen)"
		},
		"triumphConfig": {
			"pageTitle": "Modification of the triumph ",
			"name": "Nom",
			"triumph": "Earned triumph",
			"isAllCrew": "Earned by all crew",
			"isNotAllCrew": "Non earned by all crew",
			"team": "Team"
		},
		"newsList": {
			"create": "Write a news",
			"newsTitle": "Title",
			"updatedAt": "Last update"
		},
		"newsWrite": {
			"frenchTitle": "French title",
			"frenchContent": "French content",
			"englishContent": "English content",
			"englishTitle": "English title",
			"spanishTitle": "Spanish title",
			"spanishContent": "Spanish content"
		},
		"hunterConfig": {
			"name": "Nom complet",
			"hunterName": "Nom",
			"initialHealth": "Vie initiale",
			"damageRange": "Dégâts (PV retirés => probabilité)",
			"hitChance": "Probabilité de toucher",
			"dodgeChance": "Probabilité d'esquiver",
			"drawCost": "Coût à tirer",
			"maxPerWave": "Nombre maximum par vague (vide = infini)",
			"drawWeight": "Probabilité (poids) d'être tiré à chaque vague",
			"initialStatuses": "Status de départ",
			"scrapDropTable": "Table des débris laissés à la mort (débris => probabilité)",
			"spawnDifficulty": "Jour d'apparition",
			"numberOfDroppedScrap": "Nombre de débris laissés à la mort (nombre => probabilité)",
			"bonusAfterFailedShot": "Bonus pour toucher après un tir raté",
			"numberOfActionsPerCycle": "Nombre d'actions par cycle"
		},
		"playerList": {
			"closeAllPlayers": "Close (archive) all players",
			"closePlayer": "Close (archive) this player",
			"quarantine": "Put in quarantine"
		}
	},
	"charSelection": {
		"selectLanguage": "Select a language :",
		"shipNotFound": "No ship was found. One should be created in the incoming hour!",
		"startGame": "Start the game",
		"youChoose": "You choose "
	},
	"game": {
		"communications": {
			"day": "Day",
			"cycle": "Cycle",
			"showMessageChildren": "Display {count} answer | Display {count} answers",
			"hideMessageChildren": "Hide {count} answer | Hide {count} answers",
			"newCycle": "New cycle"
		}
	},
	"newsPage": {
		"updatedAt": "Updated at "
	},
	"homePage": {
		"joinUs": "Join us !",
		"play": "Play now !",
		"synopsis": "You're about to wake up aboard the Daedalus with 15 other rebels. Like you, they are fleeing the <em>Mush</em>, a parasitic fungus which is ravaging Earth and threatens Humanity.",
		"followUs": "Follow us:",
		"latestNews": "Last news:",
		"seeAllNews": "Read all news"
	},
	"errors": {
		"status": {
			"401": "401 Unauthorized",
			"403": "403 Forbidden",
			"404": "404 Resource not found",
			"409": "409 Conflict",
			"422": "422 Unprocessable Entity",
			"500": "500 Internal server error",
			"502": "502 Bad Gateway",
			"503": "503 Service unavailable"
		},
		"consultCommunity": "If the problem persists, please check with the community on <a href='https://discord.gg/Jb8Nwjck6r'>Discord</a> or the <a href='https://eternaltwin.org/forum/sections/b5ddc792-0738-4289-9818-c2f1f029c8b1'>forum</a>.",
		"Daedalus changing cycle": "Daedalus is changing cycle.",
		"gameInMaintenance": "The game is under maintenance, please come back later!",
		"neronMessage": "<strong>NERON</strong>: A thousand apologies. My designer programmed me with love, but nobody's perfect. An error occurred while trying to load the requested page... If the site is unavailable, please try again in a few minutes. ",
		"Not Found": "The requested resource has not been found.",
		"problem": "There was a problem processing your request.",
		"reportToDevs": "Please report this error to the developers, with details of how it occurred.",
		"title": "ERROR",
		"badGateway": "The proxy has received an invalid response. This error is most likely due to server synchronization: try again later!"
	}
}