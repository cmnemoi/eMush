{
	"title": "eMush - Cooperative multiplayer game: betrayal and survival in space!",
	"alpha": {
		"homepage": "<em>eMush</em> is not currently open to the public as the game is not fully finished and is infested with <em class='red'>Mushs</em><em>!!!</em><br><br>If you are interested in the game, feel free to join us on <a href='https://discord.gg/ERc3svy'>Discord</a> and on the <a href='https://eternal-twin.net/forum'>Eternaltwin forums</a>. All information is available on <a href='https://eternal-twin.net'>Eternaltwin</a>.<br><br>About the eMush alpha, private ships are regularly being launched with the help of volunteers on <a href='https://discord.gg/ERc3svy'>Discord</a>. To be part of an alpha ship, you will have to register on <a href='https://eternal-twin.net'>Eternaltwin</a> and join the list of volunteers on <a href='https://discord.gg/ERc3svy'>Discord</a>.<br><br><em>If you are not shortlisted for an alpha ship, don't worry!</em> The selection list rotates for each ship to offer everyone a chance.",
		"valide": "Submit",
		"passphrase": "Alpha Pass Phrase",
		"description": "This is an alpha for testers only.",
		"doors": "Doors",
		"inventory": "Inventory",
		"inventoryDescription": "Click here to open the Room Inventory",
		"equipment": "Equipment",
		"player": "Players",
		"issue": "Please report the encountered bugs on",
		"issue2": "or the"
	},
	"footer": {
		"alphaVersion": "Alpha Version",
		"crowdin": "You can help us translating the game on ",
		"developers": "Development",
		"coreTeam": "The eMush team:",
		"contributors": "Thanks to our contributors:",
		"alpha-testers": "and all alpha testers :)",
		"emush": "eMush",
		"eternaltwin": "eMush is a non-commercial website operated by volunteers. It belongs to the <a href=https://eternaltwin.org/>Eternaltwin</a> project, whose purpose is to preserve Motion Twin's games. This means we want to ensure they remain available even if the official website closes. <strong>We are not related to Motion Twin</strong>.",
		"legal": "Legal notice",
		"report": "Reporting inappropriate behavior"
	},
	"util": {
		"prev": "Previous page",
		"next": "Next page",
		"goBack": "Back"
	},
	"banner": {
		"ranking": "Rankings",
		"user": "My account",
		"news": "News",
		"forum": "Forum",
		"admin": "Admin",
		"moderation": "Moderation"
	},
	"ranking": {
		"ship_end_cause": "End cause",
		"daysSurvived": "Days survived",
		"cyclesSurvived": "Cycles survived",
		"playerRankingSubMenu": "Players",
		"shipRankingSubMenu": "Daedalus",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Honours List",
		"languages": "Daedalus language",
		"all": "All ships",
		"french": "French ships",
		"english": "English ships",
		"endCause": {
			"sol_return": "Daedalus returned to Sol",
			"eden": "Daedalus has settled on Eden",
			"daedalus_destroyed": "Daedalus destroyed",
			"killed_by_neron": "Crew assassinated by NERON",
			"super_nova": "Super Nova"
		}
	},
	"theEnd": {
		"headliner": "Starring role :",
		"mainRoles": "Supporting roles :",
		"figurantPlayers": "Featuring :",
		"goldSuperNova": "Golden Supernova Award",
		"silverSuperNova": "Supernova of Excellence Award",
		"bronzeSuperNova": "Honorable Supernova Award",
		"discoveredSuperNova": "Discovered Supernova Award",
		"specialSuperNova": "Special Nova Award",
		"normalSuperNova": "Prize Nova",
		"numberOfHuntersKilled": "Hunters defeated",
		"amountOfMushPlayers": "Number of Mushs",
		"endCause": {
			"sol_return": "The Daedalus returned to Sol!",
			"eden": "The Daedalus has settled on Eden!",
			"daedalus_destroyed": "Your corpse is floating amongst the debris of the pulverized Daedalus!",
			"killed_by_neron": "On the way to the infinite void!",
			"super_nova": "Death by impish administrator!",
			"alien_abducted": "You have been abducted.",
			"assassinated": "Assassinated by a crewmate!",
			"depression": "You put an end to it all...",
			"asphyxia": "Dead on the Daedalus through lack of oxygen!",
			"abandoned": "Abandoned by the Daedalus to take your chances alone!",
			"allergy": "Cuddle with an allergen!",
			"self_extracted": "Your guts needed some fresh air!",
			"exploration": "Killed in an accident in an alien world!",
			"exploration_combat": "Destroyed by an alien with a headache!",
			"exploration_lost": "Your crewmates can't be bothered coming to get you...",
			"electrocuted": "Electrocuted by this old piece of junk!",
			"injury": "Injured to death!",
			"burnt": "Burnt out by an untimely fire!",
			"clumsiness": "So badly in fact that you've achieved nothing at all...",
			"space_battle": "Death present in an annihilated device!",
			"space_asphyxiated": "Dead left in outer space!",
			"beheaded": "Beheaded by a coward!",
			"starvation": "Starved to death!",
			"quarantine": "Quarantined by NERON",
			"black_bite": "Succumbed to an alien disease!",
			"metal_plate": "Another victim claimed by the old Daed-shed!",
			"rocketed": "Scattered by an inquisitive missile!",
			"bled": "Drained of blood!",
			"infection": "Succumbed to a massive infection!",
			"mankarog": "Killed by a crafty Mankarog!",
			"no_infirmerie": "Death lost in infinite space!",
			"suicide": "Suicide with panache!",
			"patrol_ship_explosion": "A failed manoeuvre!"
		}
	},
	"userBanner": {
		"userShips": "File"
	},
	"userShips": {
		"pageTitle": "'s file",
		"character": "Character",
		"daysSurvived": "Days survived",
		"cyclesSurvived": "Survived cycles",
		"linkToTheEnd": "Daedalus",
		"goToTheEnd": "Honours List",
		"endCauses": "End cause",
		"endCause": {
			"sol_return": "Daedalus returned to Sol",
			"eden": "Daedalus has settled on Eden",
			"daedalus_destroyed": "Daedalus destroyed",
			"killed_by_neron": "Assassinated by NERON",
			"super_nova": "Super Nova",
			"alien_abducted": "Kidnapped by a superior race",
			"assassinated": "Assassinated",
			"depression": "Fatal Depression",
			"asphyxia": "Oxygen Stocks Exhausted",
			"abandoned": "Abandoned",
			"allergy": "Allergy",
			"self_extracted": "Self-Extracted",
			"exploration": "Unfortunate adventurer",
			"exploration_combat": "Not cut out for combat",
			"exploration_lost": "Lost explorer",
			"electrocuted": "Electrocuted",
			"injury": "Injuries",
			"burnt": "Burned",
			"clumsiness": "Putting the 'fun' in funeral",
			"space_battle": "Space combat",
			"space_asphyxiated": "In space without being able to breathe...",
			"beheaded": "Beheaded",
			"starvation": "Starvation",
			"quarantine": "Quarantined by NERON",
			"black_bite": "Black Bite",
			"metal_plate": "Steel Plated",
			"rocketed": "Rocketed",
			"bled": "Bled Out",
			"infection": "Sepsis",
			"mankarog": "Overly curious adventurer",
			"no_infirmerie": "No medlab available",
			"suicide": "Suicide",
			"patrol_ship_explosion": "Pulverized patrol ship"
		}
	},
	"login": "Login",
	"logout": "Logout",
	"deathpage": {
		"title": "eMush - You are dead!",
		"name": "Name",
		"death": "Death",
		"reason": "Reason",
		"like": "Like",
		"notyet": "You will be notified when the end game ranking is published.",
		"endgame": "Validate and continue"
	},
	"alerts": "Alerts :",
	"downloading": "Downloading...",
	"loading": "Loading...",
	"room": {
		"bridge": "Bridge",
		"alphaBay": "Alpha Bay",
		"bravoBay": "Bravo Bay",
		"alphaBay2": "Alpha Bay 2",
		"nexus": "Nexus",
		"medlab": "Medlab",
		"laboratory": "Laboratory",
		"refectory": "Refectory",
		"hydroponicGarden": "Hydroponic Garden",
		"engineRoom": "Engine Room",
		"frontAlphaTurret": "Front Alpha Turret",
		"centreAlphaTurret": "Center Alpha Turret",
		"rearAlphaTurret": "Rear Alpha Turret",
		"frontBravoTurret": "Front Bravo Turret",
		"centreBravoTurret": "Center Bravo Turret",
		"rearBravoTurret": "Rear Bravo Turret",
		"frontCorridor": "Front Corridor",
		"centralCorridor": "Central Corridor",
		"rearCorridor": "Rear Corridor",
		"icarusBay": "Icarus Bay",
		"alphaDorm": "Alpha Dorm",
		"bravoDorm": "Bravo Dorm",
		"frontStorage": "Front Storage",
		"centerAlphaStorage": "Center Alpha Storage",
		"centerBravoStorage": "Center Bravo Storage",
		"rearAlphaStorage": "Rear Alpha Storage",
		"rearBravoStorage": "Rear Bravo Storage"
	},
	"admin": {
		"user": {
			"username": "Username",
			"roles": "Roles"
		},
		"gameConfig": {
			"name": "Name",
			"daedalusConfig": "Daedalus config",
			"difficultyConfig": "Difficulty config",
			"characterConfigs": "Characters",
			"statusConfigs": "Statuses",
			"equipmentConfigs": "Equipment",
			"triumphConfigs": "Triumph configs",
			"diseaseCauseConfigs": "Disease causes configuration",
			"diseaseConfigs": "Diseases configuration",
			"consumableDiseaseConfigs": "Consumable disease configs"
		},
		"modifierConfig": {
			"name": "Name",
			"delta": "Delta",
			"targetVariable": "Target variable",
			"targetEvent": "Trigger event",
			"modifierHolderClass": "Modifier holder entity",
			"mode": "Calculation Mode",
			"variableModifier": "Variable modifier",
			"triggerEventModifier": "Event trigger",
			"preventEventModifier": "Event inhibitor",
			"modifierRequirement": "Activation conditions",
			"triggeredEvent": "Triggered event",
			"replaceEvent": "Replace initial event",
			"applyOnActionParameter": "Apply only on action target",
			"modifierRange": "Modifier range",
			"revertOnRemove": "Revert on remove",
			"tagConstraints": "Tag constraints",
			"directModifier": "Direct modifier",
			"modifierName": "Modifier name",
			"eventModifier": "All modifier events",
			"priority": "Application priority",
			"modifierStrategy": "Modifier strategy"
		},
		"eventConfig": {
			"name": "Name",
			"eventName": "Event name",
			"quantity": "Quantity",
			"targetVariable": "Target variable",
			"variableHolderClass": "Variable holder entity"
		},
		"modifierActivationRequirement": {
			"name": "Name",
			"activationRequirementName": "Activation requirement type",
			"activationRequirement": "Activation requirement",
			"value": "Activation probability"
		},
		"statusConfig": {
			"name": "Name",
			"visibility": "Visibility",
			"chargeVisibility": "Charges Visibility",
			"chargeStrategy": "Charge Mode",
			"dischargeStrategies": "Discharge strategies",
			"maxCharge": "Maximum charges amount",
			"startCharge": "Initial charges amount"
		},
		"actionConfig": {
			"name": "Complete name",
			"actionName": "Name",
			"target": "Target",
			"types": "Types",
			"scope": "Scope",
			"successRate": "Success rate",
			"injuryRate": "Clumsiness rate",
			"dirtyRate": "Dirty rate",
			"actionPoint": "Action point cost",
			"movementPoint": "Movement point cost",
			"moralPoint": "Morale point cost",
			"percentageSuccess": "Success rate",
			"percentageCritical": "Critical success rate",
			"percentageInjury": "Clumsiness rate",
			"percentageDirtiness": "Dirty rate",
			"isSuperDirty": "Is super dirty",
			"isNotSuperDirty": "Is not super dirty"
		},
		"daedalus": {
			"addNewRooms": "Add rooms",
			"deleteDuplicatedAlertElements": "Delete alert elements",
			"destroy": "Destroy",
			"destroyAllDaedaluses": "Destroy all Daedaluses",
			"unlock": "Unlock cycle change",
			"createDaedalus": "Create a Daedalus",
			"name": "Daedalus name :",
			"create": "Create a Daedalus",
			"config": "Configuration of the daedalus",
			"language": "Daedalus language",
			"maintenanceOn": "Put the game into maintenance",
			"maintenanceOff": "Remove game from maintenance"
		},
		"save": "Save",
		"show": "Show",
		"search": "Search",
		"edit": "Edit",
		"updatedAt": "Updated at",
		"class": "Entity type",
		"daedalusConfig": {
			"name": "Name",
			"initOxygen": "Initial Oxygen",
			"initFuel": "Initial Fuel",
			"initHull": "Initial Hull",
			"initShield": "Initial Shield",
			"dailySporeNb": "Daily amount of Spores",
			"maxOxygen": "Maximal Oxygen",
			"maxFuel": "Maximal Fuel",
			"maxHull": "Maximal Armor",
			"maxShield": "Maximal Shield",
			"nbMush": "Initial number of Mushs",
			"cyclePerGameDay": "Number of cycles per day",
			"cycleLength": "Cycle length (in minutes)",
			"placeConfigs": "Rooms"
		},
		"difficultyConfig": {
			"name": "Name",
			"equipmentBreakRate": "Equipment break rate at cycle change",
			"doorBreakRate": "Door break rate at cycle change",
			"equipmentFireBreakRate": "Equipment break rate by fires",
			"startingFireRate": "Starting fire rate at cycle change",
			"propagatingFireRate": "Fire propagating rate",
			"hullFireDamageRate": "Fire damage rate to hull",
			"tremorRate": "Tremor rate",
			"electricArcRate": "Electric arc rate",
			"metalPlateRate": "Metal plate rate",
			"panicCrisisRate": "Panic attack rate",
			"plantDiseaseRate": "Disease rate at cycle change (plants)",
			"cycleDiseaseRate": "Disease rate at cycle change (players)",
			"firePlayerDamage": "Fire damage on players (damage => probability)",
			"fireHullDamage": "Fire damage on hull (damage => probability)",
			"electricArcPlayerDamage": "Electric arc damage on players (damage => probability)",
			"tremorPlayerDamage": "Tremor damage on players (damage => probability)",
			"metalPlatePlayerDamage": "Metal plate damage on players (damage => probability)",
			"panicCrisisPlayerDamage": "Panic attack damage on players (damage => probability)",
			"difficultyModes": "Difficulty modes (name => day triggered)",
			"hunterSpawnRate": "Hunter spawn rate at cycle change",
			"hunterSafeCycles": "Cycles when no hunter can spawn",
			"startingHuntersTruceCycles": "Cycles at the beginning of the game with no new hunters spawning"
		},
		"characterConfig": {
			"name": "Name",
			"characterName": "Character name",
			"maxNumberPrivateChannel": "Maximum amount of private channels",
			"initHealthPoint": "Initial Health Points",
			"initMovementPoint": "Initial Movement Points",
			"initMoralPoint": "Initial Moral Points amount",
			"initActionPoint": "Initial Action Points amount",
			"initSatiety": "Initial satiety",
			"maxActionPoint": "Maximum Action Points amount",
			"maxMovementPoint": "Maximum Movement Points amount",
			"maxMoralPoint": "Maximum Moral Points amount",
			"maxHealthPoint": "Maximum Health Points amount",
			"maxItemInInventory": "Maximum amount of items in inventory",
			"initStatuses": "Initial statuses",
			"actions": "Actions",
			"skills": "Skills",
			"startingItems": "Starting items",
			"initDiseases": "Initial diseases"
		},
		"diseaseConfig": {
			"pageTitle": "Modification of the disease ",
			"name": "Complete name",
			"diseaseName": "Disease name",
			"type": "Type",
			"resistance": "Resistance",
			"delayMin": "Number of cycles before activation",
			"delayLength": "Number of cycles of incubation after activation",
			"diseasePointMin": "Minimum disease points amount",
			"diseasePointLength": "Maximum disease points amount",
			"override": "Overriden disease",
			"overrideDiseaseToAdd": "Disease to add :",
			"modifierConfigs": "Modifiers",
			"symptomConfigs": "Symptoms"
		},
		"symptomConfig": {
			"pageTitle": "Modification of the symptom ",
			"name": "Complete name",
			"symptomName": "Name",
			"trigger": "Trigger",
			"visibility": "Visibility",
			"symptomActivationRequirements": "Activation requirements"
		},
		"symptomActivationRequirement": {
			"pageTitle": "Modification of the activation requirement ",
			"activationRequirementName": "Activation requirement type",
			"name": "Full name",
			"activationRequirement": "Activation requirement",
			"value": "Activation probability"
		},
		"equipmentConfig": {
			"pageTitle": "Modification of the piece of equipment ",
			"name": "Complete name",
			"equipmentName": "Name",
			"isBreakable": "Is breakable",
			"isNotBreakable": "Is not breakable",
			"isFireBreakable": "Fire breakable",
			"isNotFireBreakable": "Not fire breakable",
			"isFireDestroyable": "Fire destroyable",
			"isNotFireDestroyable": "Not fire destroyable",
			"isPersonal": "Is personal",
			"isNotPersonal": "Is not personal",
			"dismountedProducts": "Items given when dismantled",
			"addDismountedProducts": "Add an item :",
			"isStackable": "Stackable",
			"isNotStackable": "Not stackable",
			"actions": "Actions",
			"initStatuses": "Statuses",
			"mechanics": "Mechanics"
		},
		"placeConfig": {
			"pageTitle": "Modification of the room ",
			"name": "Complete name",
			"placeName": "Room name",
			"type": "Room type",
			"doors": "Doors",
			"equipments": "Equipment",
			"items": "Items"
		},
		"randomItemPlaces": {
			"pageTitle": "Modification of the random repartition of items in the rooms ",
			"name": "Name",
			"items": "Items",
			"places": "Rooms"
		},
		"mechanics": {
			"pageTitle": "Modification of the mechanics ",
			"name": "Name",
			"mechanics": "Mechanics",
			"mechanicsType": "Mechanics type",
			"actions": "Actions",
			"maturationTime": "Maturation time (number of cycles => probability)",
			"addMaturationTime": "Delete a maturation time :",
			"maturationTimeIndexToAdd": "Maturation time to add :",
			"maturationTimeValueToAdd": "Probability of the maturation time :",
			"oxygen": "Oxygen given per day (number of oxygen => probability)",
			"baseAccuracy": "Success rate",
			"baseDamageRange": "Damage (number of health points => probability)",
			"expeditionBonus": "Expedition bonus",
			"criticalSuccessRate": "Critical success rate",
			"criticalFailRate": "Critical fail rate",
			"oneShotRate": "One shot rate",
			"ingredients": "Ingredients",
			"addIngredients": "Add an ingredient :",
			"isPerishable": "Is perishable",
			"isNotPerishable": "Is not perishable",
			"satiety": "Satiety",
			"actionPoints": "Action points earned (points => probabilité)",
			"moralPoints": "Morale points earned (points => probabilité)",
			"healthPoints": "Health points earned (points => probabilité)",
			"movementPoints": "Movement point gagnés (points => probabilité)",
			"extraEffects": "Extra effects",
			"skill": "Learned skill",
			"content": "Content",
			"isTranslated": "Is translated",
			"isNotTranslated": "Is not translated",
			"canShred": "Can be shred",
			"cannotShred": "Cannot be shred",
			"modifierConfigs": "Modifiers",
			"equipment": "Built piece of equipment",
			"blueprint": "Blueprints",
			"dockingPlace": "Docking room",
			"collectScrapNumber": "Amount of scrap obtain for each action Collect (amount => probability)",
			"collectScrapPatrolShipDamage": "Damage inflicted on the patroller with each Harvest action (number => probability)",
			"collectScrapPlayerDamage": "Damage to player for each action Collect (amount => probability)",
			"failedManoeuvreDaedalusDamage": "Damage to the Daedalus if the maneuver fails (value => probability)",
			"failedManoeuvrePatrolShipDamage": "Damage to the Patrol ship if the maneuver fails (value => probability)",
			"failedManoeuvrePlayerDamage": "Damage to the player if the maneuver fails (value => probability)",
			"book": "Mage Books",
			"document": "Documents",
			"drug": "Drugs",
			"fruit": "Fruits",
			"gear": "Gear",
			"plant": "Plants",
			"ration": "Food",
			"weapon": "Weapons",
			"patrolShip": "Patrol ships"
		},
		"buttons": {
			"add": "Add",
			"delete": "Delete",
			"updateConfig": "Update the configuration",
			"createNewConfig": "Create a new configuration"
		},
		"childManager": {
			"idToAdd": "ID to add : "
		},
		"childCollectionManager": {
			"idToAdd": "ID to add : "
		},
		"mapManager": {
			"indexToDelete": "Key to delete :",
			"mapIndexToAdd": "Key to add : ",
			"mapValueToAdd": "Value to add:"
		},
		"stringArrayManager": {
			"elementToAdd": "Element to add : "
		},
		"consumableDiseaseConfig": {
			"pageTitle": "Modification of the diseases given/healed by the consumable ",
			"curesName": "Diseases cured (disease => probability of being chosen)",
			"diseasesName": "Diseases given (disease => probability of being chosen)",
			"diseasesChances": "Probability of giving a disease (probability => probability of being chosen)",
			"curesChances": "Probability of curing a disease (probability => probability of being chosen)",
			"diseasesDelayMin": "Minimum number of cycles of incubation (number of cycles => probability of being chosen)",
			"diseasesDelayLength": "Maximum number of cycles of incubation (number of cycles => probability of being chosen)",
			"effectNumber": "Number of effects (number of effects => probability of being chosen)"
		},
		"triumphConfig": {
			"pageTitle": "Modification of the triumph ",
			"name": "Name",
			"triumph": "Earned triumph",
			"isAllCrew": "Earned by all crew",
			"isNotAllCrew": "Non earned by all crew",
			"team": "Team"
		},
		"newsList": {
			"create": "Write a news",
			"newsTitle": "Title",
			"updatedAt": "Last update",
			"publicationDate": "Published at"
		},
		"newsWrite": {
			"frenchTitle": "French title",
			"frenchContent": "French content",
			"englishContent": "English content",
			"englishTitle": "English title",
			"spanishTitle": "Spanish title",
			"spanishContent": "Spanish content",
			"publicationDate": "Publication date",
			"isPinned": "Pin the news"
		},
		"hunterConfig": {
			"name": "Full Name",
			"hunterName": "Name",
			"initialHealth": "Initial health",
			"damageRange": "Damage (HP lost => probability)",
			"hitChance": "Chance to hit",
			"dodgeChance": "Change to dodge",
			"drawCost": "Cost to draw",
			"maxPerWave": "Maximum per wave (empty = infinity)",
			"drawWeight": "Probability (weight) to be drawn at each wave",
			"initialStatuses": "Initial status",
			"scrapDropTable": "Drop table upon dying (scrap => probability)",
			"spawnDifficulty": "First day spawned",
			"numberOfDroppedScrap": "Amount of scrap dropped upon dying (amount => probability)",
			"bonusAfterFailedShot": "Accuracy bonus after a failed shot",
			"numberOfActionsPerCycle": "Number of actions each cycle"
		},
		"playerList": {
			"closeAllPlayers": "Close (archive) all players",
			"closePlayer": "Close (archive) this player",
			"quarantine": "Put in quarantine"
		},
		"neronAnnouncement": {
			"destroyAndUpdate": "Destruction and update",
			"destroyAndUpdateContent": "**Alert**: Daedalus is doomed to imminent destruction. Indeed, the almighty developers have planned a major **game update**. *Get ready for creative new ways to meet your end!*",
			"maintenance": "Maintenance",
			"maintenanceContent": "Dear crew, get ready for **game maintenance** in *1 cycle*. Use this time to contemplate the existential void or reflect on your life choices: *the fun will continue after the technical break... Or not*.",
			"frenchAnnouncement": "French announcement",
			"englishAnnouncement": "English announcement",
			"sendNeronAnnouncement": "Send a NERON announcement",
			"sendNeronAnnouncementToAllDaedaluses": "Send a NERON announcement to all Daedalus"
		}
	},
	"charSelection": {
		"selectLanguage": "Select a language :",
		"shipNotFound": "No ship was found. One should be created in the incoming hour!",
		"startGame": "Start the game",
		"youChoose": "You choose "
	},
	"game": {
		"communications": {
			"day": "Day",
			"cycle": "Cycle",
			"showMessageChildren": "Display {count} answer | Display {count} answers",
			"hideMessageChildren": "Hide {count} answer | Hide {count} answers",
			"newCycle": "New cycle",
			"myMessageHere": "My message here!"
		},
		"exploration": {
			"newStep": "New step"
		},
		"popUp": {
			"close": "Close"
		}
	},
	"newsPage": {
		"publishedAt": "Published at ",
		"updatedAt": "Updated at "
	},
	"homePage": {
		"joinUs": "Join us !",
		"play": "Play now !",
		"synopsis": "You're about to wake up aboard the Daedalus with 15 other rebels. Like you, they are fleeing the <em>Mush</em>, a parasitic fungus which is ravaging Earth and threatens Humanity.",
		"followUs": "Follow us:",
		"latestNews": "Last news:",
		"seeAllNews": "Read all news"
	},
	"errors": {
		"details": {
			"class": "Class:",
			"details": "Details:",
			"method": "Method:",
			"params": "Parameters:",
			"url": "URL :"
		},
		"status": {
			"401": "401 Unauthorized",
			"403": "403 Forbidden",
			"404": "404 Resource not found",
			"409": "409 Conflict",
			"422": "422 Unprocessable Entity",
			"500": "500 Internal server error",
			"502": "502 Bad Gateway",
			"503": "503 Service unavailable"
		},
		"badGateway": "The proxy has received an invalid response. This error is most likely due to server synchronization: try again later!",
		"cannotAccessExploration": "You're not allowed to see this expedition. It's a private ship, aren't you ashamed?",
		"consultCommunity": "If the problem persists, please check with the community on <a href='https://discord.gg/Jb8Nwjck6r'>Discord</a> or the <a href='https://eternaltwin.org/forum/sections/b5ddc792-0738-4289-9818-c2f1f029c8b1'>forum</a>.",
		"Daedalus changing cycle": "Daedalus is changing cycle.",
		"gameInMaintenance": "The game is under maintenance, please come back later!",
		"neronMessage": "<strong>NERON</strong>: A thousand apologies. My designer programmed me with love, but nobody's perfect. An error occurred while trying to load the requested page... If the site is unavailable, please try again in a few minutes. ",
		"Not Found": "The requested resource has not been found.",
		"player cannot reach parameter": "You cannot reach the target of the action (is it still in the room?).",
		"problem": "There was a problem processing your request.",
		"reportToDevs": "Please report this error to the developers, with details of how it occurred.",
		"title": "ERROR",
		"You have been banned!": "As a result of your actions, you have been banned by a moderator.\nIf you think this is a mistake, please open a ticket on the <a href='https://discord.gg/Jb8Nwjck6r', target='_blank'>Eternaltwin Discord</a>."
	},
	"metaSeo": {
		"description": "eMush is a remake of Mush, the award-winning survival and investigation game from Motion Twin (Twinoid). Dive into a thrilling space opera that blends survival, social deduction and role-playing in a unique multiplayer experience!",
		"og:title": "eMush - Cooperative multiplayer game: betrayal and survival in space!",
		"og:description": "eMush is a remake of Mush, the award-winning survival and investigation game from Motion Twin (Twinoid). Dive into a thrilling space opera that blends survival, social deduction and role-playing in a unique multiplayer experience!"
	},
	"reportPopup": {
		"message": "Vous pouvez signaler un comportement inapproprié sur le <a href='https://discord.gg/Jb8Nwjck6r' target='_blank'>serveur Discord d'Eternaltwin</a>.//// Lors de votre arrivée sur le serveur, demandez à ouvrir un ticket pour signaler un comportement inapproprié sur eMush.// Vous serez alors mis en contact avec nos modérateurs. N'oubliez pas de leur fournir les informations suivantes :////- Votre nom d'utilisateur eMush (vous êtes **{username}**)// - Votre identifiant de vaisseau (vous êtes dans le vaisseau **numéro {daedalusId}**)// - Le personnage à signaler// - La raison de votre signalement",
		"ok": "I understand",
		"title": "Reporting inappropriate behavior"
	},
	"moderation": {
		"banner": {
			"players": "Players",
			"users": "Users"
		},
		"playerList": {
			"gameStatuses": {
				"all": "Without distinction",
				"in_game": "In game",
				"finished": "Non-validated death",
				"closed": "Validated death"
			},
			"id": "Player's identifier",
			"gameStatus": "Player's status",
			"daedalusId": "Daedalus identifier",
			"characterName": "Played character",
			"user": "User"
		},
		"userList": {
			"userId": "User identifier",
			"roles": "Roles"
		},
		"alivePlayersFilter": "Player's status:",
		"mushPlayersFilter": "Display only Mush players",
		"ban": "Ban",
		"banDescription": "Ban this user from joining ships (you can unban them at any time).",
		"generalChannel": "General channel",
		"goToPlayerDetails": "See player details",
		"goToUserProfile": "View user profile",
		"loadMushChannel": "Load Mush channel",
		"loadPrivateChannels": "Load private channels",
		"loadPublicChannel": "Load public channel",
		"logs": "Logs",
		"mushChannel": "Mush channel",
		"privateChannel": "Private channel",
		"unban": "Unban",
		"unbanDescription": "Unban this user so that they can rejoin a ship again.",
		"quarantineAndBan": "Quarantine and ban",
		"quarantineAndBanDescription": "Quarantine and ban this player. They will leave the game and won't be able to join others.",
		"quarantine": "Quarantine",
		"quarantineDescription": "Quarantine this player, who will leave the game.",
		"searchByCharacter": "Search for a character :",
		"searchByDaedalusId": "Search for a Daedalus by ID :",
		"searchByUsername": "Search for a user :"
	}
}